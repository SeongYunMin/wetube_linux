{4_2_CleaningTheCode}
코드를 정리해보자 처음부터 이렇게 코드를 정리하며 작성할 수 있을까?
뉴비는 불가능하다 그래서 일단은 더럽지만 이해되게 코드 작성하고 따로 정리하는 시간을
가져야 한다 clean code 라는 책을 읽어봐라 중요한 점은 코드를 작성하는 시간만큼
코드를 정리하는데에도 시간을 투자해야 한다는 것이다
우리의 코드는 지금 완전 messy 하다 일단 우린 서버를 시작하도록 하는 애플리케이션 구성했다
그리고 3개으이 라우터를 만들었다 또한 컨트롤러또한 존재한다 이 컨트롤러가 정말 코드를
더럽게 만든다 왜냐면 현실에선 users 라우터에 컨트롤러가 매우 많이 달리기 때문   
따라서 우리는 이제 쪼개서 정복해나갈 것이다 어떻게 쪼갤 것이냐. 바로 컨트롤러와 라우터로
나눌 것이다 라우터 폴더에 3개의 라우터 파일을 만들자 그리고 각각의 역할을 하는 코드를
이 3개의 파일로 옮길 것이다 우선 각 파일에서 express를 쓸것이므로 처음 부분에
express를 import 해줘야 한다 내가 이미 server.js에서 express import 했어도 휘하의
파일에도 express쓴다면 express import 해줘야 한다 각 파일은 독립적이기 떄문
자 그리고 각각의 라우터 관련 코드들을 각 라우터 파일에 집어넣어준다
자, 인제 이 3 파일을 server.js 와 어떻게 연결할까? 여기가 node.js에서 매우 중요한 부분중
하나이다. nodeJS에서 파일은 모듈이고, 거품과도 같다 인제 Router.js를 server.js로 import할 것이다
근데 server.js가 import 하기 위해선 세개의 라우터파일이 각각 export를 해줘야 한다
export 안해주면 각 파일은 완전히 isolate한 상태인 것이다
근데 server.js는 각각의 라우터 파일 전체를 import하진 않을 것이다 그저 globalRouter,
usersRouter,videosRouter 이 세 변수만 import하고 싶다 
인제 알아야 하는게 "Default export" 이다
일단 라우터 파일 각각에 export default Router;를 마지막에 입력해주겠다
이렇게 하면 디폴트로 변수자체를 export 할 수 있다 디폴트이고 아니고의 차이는 다음장에서
설명하겠다 암튼 지금 이 변수만을 export 가능해진 것이다
다시 정리하자면 내 프로젝트에 있는 모든 파일은 분리된 모듈이다 그래서 타 파일과 무언가를
공유하기 위해서는 export를 먼저해주고 import를 해줘야 한다
아 근데 우린 각각의 Router 변수를 export default 했으므로 좋은 점이 있다
바로 import 할때 변수의 이름을 같게 할 필요가 없다는 것이다
그냥 import global from "./routers/globalRouter"; 이렇게 import 가능하다
이 export가 default였기 때문에 node.js는 이렇게 해도 이해할 수 있는 것

{globalRouter.js}
import express from "express";

const globalRouter = express.Router();
const handleHome = (req, res) => res.send("Home");
const handleJoin = (req, res) => res.send("Home");
globalRouter.get("/", handleHome);
globalRouter.get("/join", handleJoin);

export default globalRouter;

{4_3_Exports}
전 장에서 router들을 각자 다른 모듈로 분리시켜봤다 인제 라우터의 좋은 점이 들어난다
각 라우터 모듈은 미니 애플리케이션 같은 역할을 하므로 인제 server.js를 건드릴 필요가 없
어졌다 server.js 끄고 시작하겠다
다시말하자면 라우터는 url의 beginning일 뿐이다
자 인제 각각의 라우터 모듈에 더 다양한 url들과 컨틀롤러들을 추가할 것이다 여기서
파일을 쪼갠것의 장점이 또 들어난다 바로 변수명을 길게 안해도 된다는 것이다
기존이었으면 컨트롤러 명 정할때 handleEditVideo, handleEditUser 했겠지만 지금은 각각이
다른 파일에 있으므로 그냥 둘다 변수명 handleEdit으로 해도 되는것이다
흠 근데 이렇게 라우터 안에 컨트롤러를 여러개 만드는것은 문제가 좀 있다
앞으로 만들 프로젝트는 각각의 라우터 별로 정말 많은 컨트롤러가 필요할 예정이다
즉, 파일안에 컨트롤러가 엄청 길게 짜여질 거란 얘기이다
컨트롤러 자체도 매우 덩치가 커질 것이므로 얘네를 그냥 라우터 파일안에 쑤셔넣어두면 안된다는 것
따라서 우린 여기서 라우터랑 컨트롤러를 섞어서 쓰는 것이 좋지 않다는 것을 알아야 한다
따라서 우리는 이번엔 컨트롤러를 위한 폴더를 만들것이다 그리고 컨트롤러.js 파일을 만들것
근데 글로벌컨트롤러는 필요 없다 왜냐면 컨트롤러가 쓰이는 것은 user나 video를 작동시키키 위함이다
따라서 홈페이지에서 쓰이는 컨트롤러(예를 들어 홈페이지 들어갔을때 자동재생되는 영상)
는 비디오 컨트롤러거나 유저 컨트롤러 둘중 하나일 것이다 따라서 글로벌 컨트롤러는 의미없다
그리고 인제 기존의 라우터 파일 안에 있던 컨트롤러들을 옮겨줄 것이다 일단 라우터 파일 안의
컨트롤러들 다 지워버리자
컨트롤러 파일 안에서 변수 만들때는 이 컨트롤러가 어떤 역할을 하는지 부각시켜주는 변수명으로
선언해주는 것이 좋다 (ex. trending)
아 그리고 파일 위치를 표현할때 예를 들어 globalRouter.js 파일에서 userController.js를 import
한다 치면 ../controllers/userController 이렇게 앞에 ..을 붙여서 현재 있는 폴더 바깥으로
나갔다가 다시 controllers폴더 안으로 들어가면 된다
자 인제 컨트롤러 파일과 라우터 파일의 변수를 export와 import로 연결해줄 것이다
근데 기존에 배웠던 export default {변수}; 는 변수 한개만 export 가능하다 하지만
우린 비디오컨트롤러 파일에서 다양한 변수를 export 하고 싶다 그 방법은 내일 공부해보도록 하자
코드는 아직 미완성인데 일단 아래 첨부하겠다
{videoController.js}
const trending = (req, res) => res.send("Trending Videos");
const watch = (req, res) => res.send("watch video");
const edit = (req, res) => res.send("edit video");
export default trending;

{userController.js}
const join = (req, res) => res.send("Join!");
export default join;

{globalRouter.js}
import express from "express";
import join from "../controllers/userController";
import trending from "../controllers/videoController";

const globalRouter = express.Router();

globalRouter.get("/", trending);
globalRouter.get("/join", join);

export default globalRouter;


{userRouter.js}
import express from "express";

const userRouter = express.Router();

userRouter.get("/edit", handleEdit);
userRouter.get("/delete", handleDelete);

export default userRouter;


{videoRouter.js}
import express from "express";

const videoRouter = express.Router();

videoRouter.get("/watch", handleWatch);
videoRouter.get("/edit", handleEdit);

export default videoRouter;

{server.js}
import express from "express";
import morgan from "morgan";
import globalRouter from "./routers/globalRouter";
import userRouter from "./routers/userRouter";
import videoRouter from "./routers/videoRouter";

const PORT = 4000;

const app = express();

const logger = morgan("dev");
app.use(logger);

app.use("/videos", videoRouter);
app.use("/users", userRouter);
app.use("/", globalRouter);

const handleListening = () =>
  console.log(`Server listening on port http://localhost:${PORT} 🎃`);

app.listen(PORT, handleListening);
